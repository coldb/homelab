apiVersion: psmdb.percona.com/v1
kind: PerconaServerMongoDB
metadata:
  name: rocketchat-db-production-cluster-v1
spec:
  crVersion: 1.20.1
  image: percona/percona-server-mongodb:7.0.18-11
  unsafeFlags:
    replsetSize: true
    mongosSize: true
  upgradeOptions:
    apply: disabled
    schedule: "0 2 * * *"
  secrets:
    users: mongodb-database-users
  enableVolumeExpansion: true

  # backup:
  #   enabled: false
  #   image: percona/percona-backup-mongodb:2.10.0
  #   storages:
  #     s3-stockholm:
  #       type: s3
  #       s3:
  #         bucket: "production-backup-rocketchat-db"
  #         region: "eu-north-1"
  #         credentialsSecret: "rocketchat-aws-backup-credentials"
  #   tasks:
  #     - name: hourly-backup
  #       enabled: true
  #       schedule: "0 2 * * *"   # Every night at 2AM
  #       keep: 7
  #       storageName: "s3-stockholm"

  replsets:

  - name: rs0

    size: 3
    volumeSpec:
      persistentVolumeClaim:
        storageClassName: "synology-iscsi-retain"
        resources:
          requests:
            storage: 3Gi
    sidecars:
    - name: mongodb-exporter 
      image: percona/mongodb_exporter:2.37
      env:
      - name: EXPORTER_USER
        valueFrom:
          secretKeyRef:
            name: mongodb-database-users
            key: MONGODB_CLUSTER_MONITOR_USER
      - name: EXPORTER_PASS
        valueFrom:
          secretKeyRef:
            name: mongodb-database-users
            key: MONGODB_CLUSTER_MONITOR_PASSWORD
      - name: POD_IP
        valueFrom:
          fieldRef:
            fieldPath: status.podIP
      - name: MONGODB_URI
        value: "mongodb://$(EXPORTER_USER):$(EXPORTER_PASS)@$(POD_IP):27017"
      args: ["--discovering-mode", "--compatible-mode", "--collect-all", "--mongodb.uri=$(MONGODB_URI)"]

  sharding:
    enabled: false

    configsvrReplSet:
      size: 3
      volumeSpec:
        persistentVolumeClaim:
          storageClassName: "synology-iscsi-retain"
          resources:
            requests:
              storage: 3Gi

    mongos:
      size: 1

---

apiVersion: v1
kind: Service
metadata:
  name: rocketchat-mongodb-metrics
  labels:
    app.kubernetes.io/instance: rocketchat-mongodb-metrics
    app.kubernetes.io/component: metrics
  annotations:
    prometheus.io/path: /metrics
    prometheus.io/port: '9216'
    prometheus.io/scrape: 'true'
spec:
  ports:
  - name: http-metrics 
    port: 9216 
    targetPort: 9216
    protocol: TCP
  selector:
    app.kubernetes.io/instance: rocketchat-db-production-cluster-v1

---

apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: rocketchat-mongodb-servicemonitor
  namespace: monitoring
  labels:
    app.kubernetes.io/instance: rocketchat-mongodb-metrics
    app.kubernetes.io/component: metrics
spec:
  namespaceSelector:
    matchNames:
      - rocketchat
  selector:
    matchLabels:
      app.kubernetes.io/instance: rocketchat-mongodb-metrics
      app.kubernetes.io/component: metrics
  endpoints:
  - port: http-metrics
    interval: 15s

---

apiVersion: psmdb.percona.com/v1
kind: PerconaServerMongoDBRestore
metadata:
  name: auto-restore-latest
spec:
  clusterName: rocketchat-db-production-cluster-v1
  backupSource:
    destination: s3://production-backup-rocketchat-db
    storageName: s3-stockholm
    s3:
      bucket: "production-backup-rocketchat-db"
      region: "eu-north-1"
      credentialsSecret: "rocketchat-aws-backup-credentials"
      path: "2025-08-21T19:20:00Z"
