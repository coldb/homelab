# https://docs.percona.com/percona-operator-for-mongodb/minikube.html
# https://docs.percona.com/percona-operator-for-mongodb/operator.html
# https://github.com/percona/percona-server-mongodb-operator/blob/main/deploy/cr.yaml
apiVersion: psmdb.percona.com/v1
kind: PerconaServerMongoDB
metadata:
  name: rocketchat-db-staging-cluster-v1
spec:
  crVersion: 1.20.1
  image: percona/percona-server-mongodb:7.0.18-11
  unsafeFlags:
    replsetSize: true
    mongosSize: true
  upgradeOptions:
    apply: disabled
    schedule: "0 2 * * *"
  secrets:
    users: minimal-cluster
  enableVolumeExpansion: true
  replsets:

  - name: rs0

    size: 3
    volumeSpec:
      persistentVolumeClaim:
        storageClassName: "synology-iscsi"
        resources:
          requests:
            storage: 3Gi
    affinity:
      antiAffinityTopologyKey: "none" # Needed to deploy in single node
    sidecars:
    - name: mongodb-exporter 
      image: percona/mongodb_exporter:2.37
      env:
      - name: EXPORTER_USER
        valueFrom:
          secretKeyRef:
            name: minimal-cluster
            key: MONGODB_CLUSTER_MONITOR_USER
      - name: EXPORTER_PASS
        valueFrom:
          secretKeyRef:
            name: minimal-cluster
            key: MONGODB_CLUSTER_MONITOR_PASSWORD
      - name: POD_IP
        valueFrom:
          fieldRef:
            fieldPath: status.podIP
      - name: MONGODB_URI
        value: "mongodb://$(EXPORTER_USER):$(EXPORTER_PASS)@$(POD_IP):27017"
      args: ["--discovering-mode", "--compatible-mode", "--collect-all", "--mongodb.uri=$(MONGODB_URI)"]

  sharding:
    enabled: false

    configsvrReplSet:
      size: 3
      affinity:
        antiAffinityTopologyKey: "none"
      volumeSpec:
        persistentVolumeClaim:
          storageClassName: "synology-iscsi"
          resources:
            requests:
              storage: 3Gi

    mongos:
      size: 1
      affinity:
        antiAffinityTopologyKey: "none" # Needed to deploy in single node

